// qsamplerChannels.cpp
//
/****************************************************************************
   Copyright (C) 2003-2004, rncbc aka Rui Nuno Capela. All rights reserved.

   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2
   of the License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

*****************************************************************************/

#include "qsamplerChannels.h"
#include "qsamplerChannelForm.h"    // Generated by uic.

#include <qlayout.h>
#include <qvbox.h>
#include <qtooltip.h>

#include "config.h"

//-------------------------------------------------------------------------
// qsamplerChannelStrip - Channel strip window.
//

// Constructor.
qsamplerChannelStrip::qsamplerChannelStrip ( QWidget *pParent, const char *pszName )
    : QFrame(pParent, pszName)
{
    // Set the default frame style.
    QFrame::setFrameStyle(QFrame::StyledPanel | QFrame::Raised);
    QFrame::setSizePolicy(QSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding));

    // Create main widget and layout enforcer.
    m_pVBoxLayout  = new QVBoxLayout(this, 4, 4);
    m_pChannelForm = new qsamplerChannelForm(this);

    // Adjust to layout and show up immediately.
    m_pVBoxLayout->addWidget(m_pChannelForm);
    m_pChannelForm->adjustSize();
}


// Destructor.
qsamplerChannelStrip::~qsamplerChannelStrip (void)
{
    // No need to delete child widgets, Qt does it all for us.
}


// The inner channel form accessor.
qsamplerChannelForm *qsamplerChannelStrip::form (void)
{
    return m_pChannelForm;
}


//-------------------------------------------------------------------------
// qsamplerChannels - Channels child window.
//

// Constructor.
qsamplerChannels::qsamplerChannels ( QWidget *pParent, const char *pszName )
    : QScrollView(pParent, pszName)
{
    // Surely a name is crucial (e.g. for storing geometry settings)
    if (pszName == 0)
        setName("qsamplerChannels");

    // Create the forced layout widgets.
    m_pVBox = new QVBox(QScrollView::viewport());
    // Build the layout.
    QScrollView::addChild(m_pVBox);
//  QScrollView::setResizePolicy(QScrollView::AutoOneFit);

    // Finally set the default caption and tooltip.
    QString sCaption = tr("Channels");
    QToolTip::add(this, sCaption);
    setCaption(sCaption);

    // The channel forms are auto-destructable.
    m_channels.setAutoDelete(true);
}


// Destructor.
qsamplerChannels::~qsamplerChannels (void)
{
    // No need to delete child widgets, Qt does it all for us.
    m_channels.clear();
}


//-------------------------------------------------------------------------
// qsamplerChannels - Channel list management.

// Create and add a new channel to the list.
qsamplerChannelStrip *qsamplerChannels::addChannel (void)
{
    qsamplerChannelStrip *pChannel = new qsamplerChannelStrip(m_pVBox);
    
    if (pChannel) {
        m_channels.append(pChannel);
        pChannel->show();
    }
    
    return pChannel;
}


// Remove a channel from the list.
void qsamplerChannels::removeChannel ( qsamplerChannelStrip *pChannel )
{
    if (pChannel)
        m_channels.remove(pChannel);
}


// Retrive the channel pointer by index.
qsamplerChannelStrip *qsamplerChannels::channelAt ( int iChannel )
{
    return m_channels.at(iChannel);
}


// end of qsamplerChannels.cpp
